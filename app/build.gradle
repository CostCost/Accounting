apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
  compileSdkVersion versions.compileSdkVersion
  buildToolsVersion versions.buildToolsVersion
  defaultConfig {
    applicationId "com.littlegnal.accounting"
    minSdkVersion versions.minSdkVersion
    targetSdkVersion versions.targetSdkVersion
    versionCode 1
    versionName "1.0"
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    javaCompileOptions {
      annotationProcessorOptions {
        arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
      }
    }
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }

    debug {
      debuggable true
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  kapt {
    correctErrorTypes = true
  }


  androidExtensions {
    experimental = true
  }
}

configurations {
  ktlint
}

task ktlint(type: JavaExec, group: LifecycleBasePlugin.VERIFICATION_GROUP) {
  inputs.dir('src')
  outputs.dir('src')

  description = "Check Kotlin code style."
  classpath = configurations.ktlint
  main = 'com.github.shyiko.ktlint.Main'
  args '--android', 'src/**/*.kt'
}
check.dependsOn ktlint

task ktFormat(type: JavaExec, group: 'formatting') {
  inputs.dir('src')
  outputs.dir('src')

  description = 'Fix Kotlin code style deviations.'
  classpath = configurations.ktlint
  main = 'com.github.shyiko.ktlint.Main'
  args '--android', '-F', 'src/**/*.kt'
}

dependencies {
  implementation libraries.kotlinStdlibJdk7
  // support lib
  implementation 'androidx.appcompat:appcompat:1.0.0'
  implementation 'com.google.android.material:material:1.0.0'
  implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'
  // timber
  implementation libraries.timber
  // dagger
  implementation libraries.dagger2
  implementation libraries.dagger2Android
  implementation libraries.dagger2AndroidSupport
  kapt libraries.dagger2Compiler
  kapt libraries.dagger2AndroidCompiler
  // architecture components
  implementation 'androidx.room:room-runtime:2.1.0-alpha01'
  kapt 'androidx.room:room-compiler:2.1.0-alpha01'
  implementation 'androidx.room:room-rxjava2:2.1.0-alpha01'
  implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
  // epoxy
  implementation libraries.epoxy
  kapt libraries.epoxyCompiler
  // rxjava
  implementation libraries.rxAndroid2
  implementation libraries.rxJava2
  // rxbinding
  implementation libraries.rxbinding_recyclerview
  implementation libraries.flexbox
  // rxrelay
  implementation libraries.rxrelay

  // stetho
  debugImplementation libraries.stetho
  // leakcanary
  debugImplementation libraries.leakCanary
  releaseImplementation libraries.leakCanaryNoOp
  testImplementation libraries.leakCanaryNoOp
  debugImplementation libraries.leakCanarySupportFragment

  ktlint libraries.ktlint

  testImplementation test.junit
  testImplementation 'androidx.room:room-testing:2.1.0-alpha01'
  testImplementation 'androidx.arch.core:core-testing:2.0.0'
  testImplementation test.hamcrestAll
  testImplementation test.mockito

  androidTestImplementation test.junit
  androidTestImplementation 'androidx.test:runner:1.1.0'
  androidTestImplementation 'androidx.room:room-testing:2.1.0-alpha01'
  androidTestImplementation 'androidx.arch.core:core-testing:2.0.0'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'

  debugImplementation libraries.flipper

  implementation libraries.mvrx

  compileOnly 'com.squareup.inject:assisted-inject-annotations-dagger2:0.3.0'
  kapt 'com.squareup.inject:assisted-inject-processor-dagger2:0.3.0'
}
